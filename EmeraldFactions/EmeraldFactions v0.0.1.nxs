{"type":"group","name":"EmeraldFactions","enabled":true,"items":[{"type":"function","name":"onInstall","enabled":true,"code":"let emerald = client.emerald;\nlet factions = emerald.factions = {\n  name: 'EmeraldFactions',\n  version: '0.0.1.20240528'\n};\n\nfactions.colors = {\n  'Serenwilde': 'seagreen',\n  'Glomdoring': 'darkviolet',\n  'Celest': 'lightyellow',\n  'Magnagora': 'crimson',\n  'Hallifax': 'dodgerblue',\n  'Gaudiguch': 'orange',\n  'Divine': 'yellow',\n  '(none)': 'olivedrab'\n};\nfactions.names = get_variable('emerald_factions_names') ? JSON.parse(get_variable('emerald_factions_names')) : {};\n\nfactions.save = () => {\n  set_variable('emerald_factions_colors',JSON.stringify(factions.colors));\n  set_variable('emerald_factions_names',JSON.stringify(factions.names));\n}\nfactions.add = (name) => {\n  fetch(`https://api.lusternia.com/characters/${name}.json`)\n  .then(res => {\n    return res.json();\n  }).then(data => {\n    if (String(data).includes(' was not found')) {\n      client.emerald.emnote(`${name} was not found. Removing from name list.`);\n      delete factions.names[name];\n    } else {\n      let org;\n      if (['Spindle','Skein','Bobbins'].includes(name) || data.level == 'Infinite') {\n        org = 'Divine';\n      } else {\n        org = data.faction.charAt(0).toUpperCase() + data.faction.substr(1).toLowerCase();\n      }\n      factions.names[data.name] = org;\n      client.emerald.emnote(`${data.name} is of ${org}`, 'Factions');\n      factions.save();\n    }\n  })\n}\nemerald.plugins['factions'] = true;\nclient.emerald.emnote(`${factions.name} v${factions.version} initialised.`);"},{"type":"function","name":"onUninstall","enabled":true,"code":"// Place any code here you'd like to autorun when the package is uninstalled"},{"type":"function","name":"onLoad","enabled":true,"code":"run_function(\"onInstall\",\"\",\"EmeraldFactions\");"},{"type":"trigger","name":"emerald_factions_names","enabled":true,"actions":[{"type":"script","enabled":true,"script":"let factions = client.emerald.factions\nconst words = [...args[0].matchAll(/\\b(.+?)\\b/gi)];\nwords.forEach(w => {\n  if (factions.names.hasOwnProperty(w[0])) {\n    colorize_current_line(w.index,w[0].length,factions.colors[factions.names[w[0]]])\n  }\n})"}],"text":"^.*?$","matching":"regexp","whole_words":false,"case_sensitive":false},{"type":"alias","name":"","enabled":true,"actions":[{"type":"script","enabled":true,"script":"client.emerald.factions.add(args[1])"}],"text":"^whois (.+)$","matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true}],"description":"Name highlighting based on org"}