{
  "description": "Optional module containing some fun flavor reflexes",
  "enabled": true,
  "items": [{
      "enabled": true,
      "items": [{
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(air)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['darkorchid','blueviolet','mediumpurple','orchid','plum'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(amethyst)[s]?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['azure'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(azure)[s]?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['yellow','gold','goldenrod','orange','#FFBF00'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(amber)\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "A",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['yellow','lightyellow','lemonchiffon','olive'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(beryl)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#262626'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(black)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['crimson','red','darkred'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(blood)y?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['crimson','green','mediumseagreen','darkgreen'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(bloodstone)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#2241FF'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(blue)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['brown'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(brown)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['khaki'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(beer)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['bisque','burlywood','tan','sandybrown','peru','sienna'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(branch)(?:es)?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#B5A642','#C4B868','#D3CA8E','#E1DBB3'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(brass)y?\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "B",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['crimson','deeppink','mediumvioletred','darkred'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(carnelian)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#1DACD6'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(cerulean)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['gold'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(cheese)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['tan'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(chicken)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['chocolate'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(chocolate)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['yellow','lightyellow','lemonchiffon','olive'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(citrine)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(cloud)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['yellow','gold','goldenrod','khaki'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(coin)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey','yellow'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(crackle)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(crystal)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(crystalline)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#2F2F2F','#3F3F3F','#1F1F1F'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(coal)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#0047AB'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(cobalt)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['papayawhip'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(cream)[y]?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#6C4C33','#9B6D2B','#8C5828','#7A5D47'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(copper)y?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['crimson'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(crimson)\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "C",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['violet','blueviolet','lavender','mediumorchid','plum'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(dusk)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey','cyan'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(diamond)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightyellow','yellow','pink','gold','thistle'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(dawn)\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "D",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['brown','gray','saddlebrown','slategray','sienna','darkgoldenrod'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(earth)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey','yellow'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(electrical)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey','yellow'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(electricity)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['green','seagreen','darkgreen'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(emerald)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['violet','blueviolet','slateblue','mediumorchid','indigo'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(evening)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['ivory'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(egg)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['silver','grey','yellow','cyan'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(energy)\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "E",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['red','orange','yellow'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(fire)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['red','orange','yellow'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(fiery)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['red','orange','yellow'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(flame)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','pink','green'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(flower)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightcoral','pink','lavender','thistle','plum'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(fruit)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightsteelblue'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(fish)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightsteelblue','silver','royalblue','dodgerblue','lightblue','white'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(frost)[sy]?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['darkgreen','green','seagreen','lightgreen','palegreen','mediumspringgreen'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(forest)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['red','orange','yellow'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(flare)s?\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "F",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['red','crimson','indianred','firebrick'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(garnet)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','tan','silver','khaki'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(gems)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','lightyellow','silver','khaki'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(gemstone)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['silver','white','cyan','silver','white'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(glass)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(glitter)[sy]?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(glittering)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['silver','white','lemonchiffon','lightyellow'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(glow)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['silver','white','lemonchiffon','lightyellow'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(glowing)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['yellow','gold','goldenrod','khaki'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(gold)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['yellow','gold','goldenrod','khaki'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(golden)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['limegreen'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(green)s?\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "G",
          "type": "group"
        }, {
          "enabled": true,
          "items": [],
          "name": "H",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['indigo'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(indigo)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightyellow','lavender','pink','powderblue','mediumspringgreen','honeydew','azure','ivory','mistyrose'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(iridescence)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightyellow','lavender','pink','powderblue','cornsilk','honeydew','azure','ivory','mistyrose'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(iridescent)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['darkgray','gray','dimgray','lightslategray','slategray','darkslategray'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(iron)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#2F2F2F','#3F3F3F','#1F1F1F'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(ink)[s]?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightsteelblue','silver','royalblue','dodgerblue','lightblue','white'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(ice)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightsteelblue','silver','royalblue','dodgerblue','lightblue','white'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(icy)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['red','orange','yellow'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(inferno)s?\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "I",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['green','seagreen','lightgreen','palegreen','mediumspringgreen'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(jade)\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "J",
          "type": "group"
        }, {
          "enabled": true,
          "items": [],
          "name": "K",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lavender'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(lavender)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['green','seagreen','darkgreen'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(leaf)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['green','seagreen','darkgreen'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(leaves)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightyellow','lemon','lemonchiffon','greenyellow'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(lemon)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightyellow','yellow','gold'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(light)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['silver','grey','yellow'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(lightning)\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "L",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['darkgray','gray','dimgray','lightslategray','slategray','darkslategray'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(metal)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#2F2F2F','#3F3F3F','#1F1F1F'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(midnight)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['ivory'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(milk)y?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightyellow','yellow','pink','gold','thistle'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(morning)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['palegreen'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(mint)y?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['silver','white','lemonchiffon','lightyellow'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(moonstone)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightcoral','pink'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(meat)s?\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "M",
          "type": "group"
        }, {
          "enabled": true,
          "items": [],
          "name": "N",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['orange'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(orange)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#2F2F2F','#3F3F3F','#1F1F1F'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(onyx)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['deepskyblue','dodgerblue','#0020C2','silver','lightgreen','skyblue'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(opal)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['bisque','burlywood','tan','sandybrown','peru','sienna'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(oaken)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['bisque','burlywood','tan','sandybrown','peru','sienna'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(oak)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['deepskyblue','dodgerblue','#0020C2','silver','lightgreen','skyblue'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(opalescence)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['deepskyblue','dodgerblue','#0020C2','silver','lightgreen','skyblue'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(opalescent)\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "O",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightsalmon','coral','pink','green'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(peach)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightsalmon','coral','pink','green'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(peaches)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightyellow','lavener','pink','powderblue','cornsilk','honeydew','azure','ivory','mistyrose'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(pearl)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightyellow','lavener','pink','powderblue','cornsilk','honeydew','azure','ivory','mistyrose'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(pearlescence)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightyellow','lavener','pink','powderblue','cornsilk','honeydew','azure','ivory','mistyrose'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(pearlescent)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['red','pink','white'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[p%3],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(peppermint)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['pink'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(pink)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['red','orange','yellow','green','blue','indigo','violet'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(prismatic)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['purple'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(purple)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(platinum)\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "P",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(quartz)\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "Q",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['red','orange','yellow','green','blue','indigo','violet'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(rainbow)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['crimson','deeppink','mediumvioletred','darkred'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(raspberry)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['crimson','deeppink','mediumvioletred','darkred'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(raspberries)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['red'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(red)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['red','crimson','indianred','firebrick'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(ruby)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['red','crimson','indianred','firebrick'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(rubies)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightcoral','pink'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(rose)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['blue','royalblue','dodgerblue','lightblue'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(rain)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['blue','royalblue','dodgerblue','lightblue'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(rainstorm)s?\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "R",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['blue','royalblue','dodgerblue','lightblue'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(sapphire)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#FF2400'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(scarlet)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#2F2F2F','#3F3F3F','#1F1F1F'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(shadow)[sy]?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(silver)y?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(snow)y?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey','yellow'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(spark)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(sparkle)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(sparkly)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(sparkling)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['darkgray','gray','dimgray','lightslategray','slategray','darkslategray'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(steel)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['crimson','pink','red','darkred'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(strawberry)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['crimson','pink','red','darkred'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(strawberries)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightyellow','yellow','gold'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(sun)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['lightyellow','yellow','gold'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(sunlight)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#2F2F2F','#3F3F3F','#1F1F1F'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(soot)[y]?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['yellow','gold','goldenrod','khaki'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(sovereigns)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['red','green','white'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[p%3],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(solstice)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white','silver','grey','yellow'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(storm)s?\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "S",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#FFC300'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(tangerine)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#40E0D0'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(turquoise)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#2F2F2F','#3F3F3F','#1F1F1F','red','crimson','darkred','saddlebrown'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(taint)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#2F2F2F','#3F3F3F','#1F1F1F','red','crimson','darkred','saddlebrown'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(tainted)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['darkgreen','green','seagreen','lightgreen','palegreen','mediumspringgreen'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(tree)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['yellow','gold','goldenrod','khaki'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(topaz)\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "T",
          "type": "group"
        }, {
          "enabled": true,
          "items": [],
          "name": "U",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['green','seagreen','lightgreen','palegreen','mediumspringgreen'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(vegetable)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['green','seagreen','darkgreen'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(vine)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['green','seagreen','darkgreen'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(vines)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['violet'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(violet)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#007F66'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(viridian)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#D9381E'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(vermilion)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['#D9381E'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(vermillion)\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "V",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['blue','royalblue','dodgerblue','lightblue'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(water)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['white'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(white)s?\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['bisque','burlywood','tan','sandybrown','peru','sienna'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(wooden)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['bisque','burlywood','tan','sandybrown','peru','sienna'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(wood)\\b",
              "type": "trigger",
              "whole_words": false
            }, {
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['blue','royalblue','dodgerblue','lightblue'];\nlet s = current_text();\nlet w = args[1];\nlet wp = args[1].charAt(0).toUpperCase() + args[1].substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(waves)\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "W",
          "type": "group"
        }, {
          "enabled": true,
          "items": [],
          "name": "X",
          "type": "group"
        }, {
          "enabled": true,
          "items": [{
              "actions": [{
                  "enabled": true,
                  "script": "let c = ['yellow'];\nlet s = current_text();\nlet w = args[1].toLowerCase();\nlet wp = w.charAt(0).toUpperCase() + w.substring(1);\nlet p\nlet li = s.indexOf(w,0);\nwhile (li !== -1) {\n  for (p=0;p<w.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(w,li+1);\n}\n\nli = s.indexOf(wp,0);\nwhile (li !== -1) {\n  for (p=0;p<wp.length;p++) {\n    colorize_current_line(li+p,1,c[Math.floor(Math.random()*c.length)],'black');\n  }\n  li=s.indexOf(wp,li+1);\n}",
                  "type": "script"
                }
              ],
              "case_sensitive": false,
              "enabled": true,
              "matching": "regexp",
              "name": "",
              "text": "\\b(yellow)s?\\b",
              "type": "trigger",
              "whole_words": false
            }
          ],
          "name": "Y",
          "type": "group"
        }, {
          "enabled": true,
          "items": [],
          "name": "Z",
          "type": "group"
        }
      ],
      "name": "ColorWords",
      "type": "group"
    }
  ],
  "name": "EmeraldRP",
  "type": "group"
}
