{"type":"group","name":"EmeraldAffs","enabled":true,"items":[{"type":"function","name":"onInstall","enabled":true,"code":"let emerald = client.emerald;\nlet affs = client.emerald.affs = {\n  name: 'EmeraldAffs',\n  version: '0.0.1'\n};\n\naffs.set = (aff,val) => {\n  client.emerald.debugmsg(`Setting affs.${aff} to ${val}`);\n  affs[aff].value = val;\n  if (affs.has('mutilatedleftleg') && affs.has('mutilatedrightleg') || affs.has('asleep')) affs.set('sprawled',true);\n  return val;\n}\n\naffs.has = (aff) => {\n  client.emerald.debugmsg(`Affs.has(${aff}) = ${affs[aff].value}`)\n  return affs[aff].value\n}\n\naffs.clear = (aff) => {\n  return affs[aff].value = false;\n}\n\naffs.reset = () => {\n  run_function('resetAffs','','EmeraldAffs');\n  client.emerald.emnote('Affs cleared','Affs');\n}\n\naffs.canAct = () => {\n  return [\n    'aeon',\n    'asleep',\n    'damagedleftarm',\n    'damagedrightarm',\n    'crucified',\n    'entangled',\n    'frozen',\n    'mutilatedleftarm',\n    'mutilatedrightarm',\n    'paralysis',\n    'sprawled',\n    'stun',\n  ].every(aff => {affs[aff].value == false || affs[aff].value == 0});\n}\n\naffs.canMove = () => {\n  return [\n    'mutilatedleftleg',\n    'mutilatedrightleg',\n    'entangled',\n    'crucified',\n    'frozen',\n    'paralysis',\n    'sprawled',\n    'stun'\n  ].every(aff => {affs[aff].value == false || affs[aff].value == 0});\n}\n\naffs.reset();\nemerald.plugins['affs'] = true;\nemerald.emnote(`${affs.name} v${affs.version} initialised.`);"},{"type":"function","name":"onUninstall","enabled":true,"code":"// Place any code here you'd like to autorun when the package is uninstalled"},{"type":"function","name":"resetAffs","enabled":true,"code":"let affs = client.emerald.affs;\n[\n  'addiction',\n  'allergies',\n  'anorexia',\n  'ataxia',\n  'clumsiness',\n  'confusion',\n  'epilepsy',\n  'hallucinations',\n  'paranoia',\n  'recklessness',\n  'sensitivity',\n  'stupidity',\n  'temporaryinsanity'\n].forEach(a=>affs[a]={type:'mental',value:false});\n\n[\n  'achromaticaura',\n  'aeon',\n  'cloudcoils',\n  'deaf',\n  'disloyalty',\n  'egovice',\n  'healthleech',\n  'holyfire',\n  'jinx',\n  'luminosity',\n  'manabarbs',\n  'pacifism',\n  'powerspikes',\n  'slickness',\n  'timewarp',\n  'warpedaura'\n].forEach(a=>affs[a]={type:'spiritual',value:false});\n\n[\n  'asthenia',\n  'asthma',\n  'blind',\n  'clot',\n  'deathmark',\n  'dysentery',\n  'frostbite',\n  'frozen',\n  'haemophilia',\n  'infestation',\n  'paralysis',\n  'particulates',\n  'powersap',\n  'pox',\n  'relapsing',\n  'rigormortis',\n  'scabies',\n  'shivering',\n  'sickening',\n  'vomiting'\n].forEach(a=>affs[a]={type:'internal',value:false});\n\n[\n  'ablaze',\n  'burns',\n  'collapsedlung',\n  'crushedchest',\n  'damagedleftarm',\n  'damagedleftleg',\n  'damagedorgans',\n  'damagedrightarm',\n  'damagedrightleg',\n  'damagedskull',\n  'damagedthroat',\n  'internalbleeding',\n  'mutilatedleftarm',\n  'mutilatedleftleg',\n  'mutilatedrightarm',\n  'mutilatedrightleg'\n].forEach(a=>affs[a]={type:'physical',value:false});\n\n[\n  'clampedleftarm',\n  'clampedrightarm',\n  'crucified',\n  'entangled',\n  'gored',\n  'grapple',\n  'hoisted',\n  'impaled',\n  'transfixed'\n].forEach(a=>affs[a]={type:'writhe',value:false});\n\n[\n  'amorous',\n  'badluck',\n  'batbane',\n  'bentaura',\n  'blackout',\n  'chasm',\n  'chronicloop',\n  'concussion',\n  'corruptionmark',\n  'crystalspire',\n  'damnationmark',\n  'darknessmark',\n  'darkseed',\n  'despairmark',\n  'echoes',\n  'ectoplasm',\n  'greywhispers',\n  'heatwave',\n  'herbbane',\n  'hypnoticpattern',\n  'incendiary',\n  'malignprophesy',\n  'needlerain',\n  'northwind',\n  'omen',\n  'oracle',\n  'painmark',\n  'paradox',\n  'rainbowpattern',\n  'scarab',\n  'snakebane',\n  'stun',\n  'succumb',\n  'timeechoes'\n].forEach(a=>affs[a]={type:'timed',value:false});\n\n[\n  'amnesia',\n  'asleep',\n  'disrupted',\n  'enfeeble',\n  'fear',\n  'lust',\n  'sprawled'\n].forEach(a=>affs[a]={type:'special',value:false});\n\n[\n  'mucus',\n  'muddy'\n].forEach(a=>affs[a]={type:'cleanse',value:false});"}],"description":"Aff tracking and reporting to other modules."}