{"type":"group","name":"EmeraldMapper","enabled":true,"items":[{"type":"function","name":"onInstall","enabled":true,"code":"var emerald = client.emerald\nemerald.mapper = {map: {}};\n\nemerald.emnote('Cartographing the Basin of Life...', 'Mapper');\nfetch('https://www.lusternia.com/maps/map.xml')\n.then(res => {\n  if (!res.ok) {\n    emerald.emnote('Error retrieving master map.', 'Mapper');\n  }\n  return res.text();\n})\n.then(mapText => {\n  let t = String(mapText);\n  let parser = new DOMParser();\n  emerald.mapper.map = parser.parseFromString(t, \"text/xml\");\n  emerald.emnote(`Successfully mapped ${emerald.mapper.map.getElementsByTagName(\"room\").length} rooms in ${emerald.mapper.map.getElementsByTagName(\"area\").length} areas.`,'Mapper');\n})\n.catch(error => {\n  emerald.emnote('Error parsing master map.','Mapper');\n});\n\nemerald.mapper.findArea = (id) => {\n  let areas = emerald.mapper.map.querySelectorAll(\"area\");\n  let returnValue = '';\n  areas.forEach(a => {\n    if (a.getAttribute('id') == id) returnValue = a.getAttribute('name');\n  }\n  return returnValue;\n}\n\nemerald.mapper.findRoom = (roomName) => {\n  let rooms = emerald.mapper.map.querySelectorAll(\"room\");\n  emerald.note.clear();\n  emerald.note.build('[Mapper]:','silver','seagreen',' ','silver','');\n  emerald.note.build(`Scanning ${String(emerald.mapper.map.getElementsByTagName(\"room\").length} rooms for \"`,emerald.configs.ui_white,'');\n  emerald.note.build(roomName, emerald.configs.ui_green, '', '\"...',emerald.configs.ui_white,'');\n  emerald.note.display();\n  let foundRooms = 0;\n  rooms.forEach(r => {\n    let t = r.getAttribute('title');\n    if (r.getAttribute('title').includes(name.toLowerCase()) {\n      let roomId = r.getAttribute('id');\n      let area = emerald.mapper.findArea(roomId);\n      emerald.note.clear();\n      emerald.note.build('[Mapper]:','silver','seagreen',' ','silver','');\n      emerald.note.build(`«gopath ${roomId}»v${roomId}`,emerald.configs.ui_green,'',': ',emerald.configs.ui_white,'');\n      emerald.note.build(r.getAttribute('title'),emerald.configs.ui_white,'');\n      emerald.note.build(' [',emerald.configs.ui_blue,'', area,emerald.configs.ui_green,'',']',emerald.configs.ui_blue,'');\n      emerald.note.display();\n      foundRooms++;\n    }\n  });\n  if (foundRooms == 0) {\n    emerald.emnote('ROOM NOT FOUND!','Mapper');\n    emerald.note.clear();\n  } else {\n    emerald.emnote(`Found ${foundRooms} matching rooms.`,'Mapper');\n  }\n}"},{"type":"function","name":"onUninstall","enabled":true,"code":"// Place any code here you'd like to autorun when the package is uninstalled"}],"description":""}